@model IEnumerable<Apps.Web.Models.UserModel>

@{
    ViewBag.Title = "Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid(source: Model,
        columnNames: new[] { "CodeUser","Name", "Email", "StateActive" });
}

<style type="text/css">
    .mainpanel {
        margin-left: 230px;
        min-height: 636px;
        padding: 20px;
        padding-top: 20px;
        padding-right: 20px;
        padding-bottom: 20px;
        padding-left: 20px;
    }

    .info th {
        background: #E0E0E0 !important;
        
    }

    .info th a {
        color: #2a6496;
        font-weight: bold;
        }

    .codeuser { min-width: 80px; }
    .name { min-width: 300px; }
    .email { min-width: 300px;}
    .state_active { min-width: 30px;}
    .editar { width: 10px; }
    .eliminar { width: 10px; }
</style>
 
<h2>Listado</h2>

<p>
    @Html.ActionLink("Crear Usuario", "Insert")
</p>
<div id="grid" style="width:100px">
    @grid.GetHtml(
        tableStyle: "table table-bordered",
        headerStyle: "info",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "gridrow",
        columns: grid.Columns(
        grid.Column(columnName: "CodeUser",header: "Usuario",style: "codeuser"),
        grid.Column(columnName: "Name", header: "Nombre", style: "name"),
        grid.Column(columnName: "Email", header: "Email", style: "email"),
        grid.Column(columnName: "StateActive", header: "Estado", style: "state_active"),
        grid.Column(header: "",style: "Editar", format:(item) =>
        {
            var link = Html.ActionLink("Editar", "Update", new { codeUser = item.CodeUser });
            return link;
        }),
        grid.Column(header: "", style: "Eliminar", format: (item) =>
        {
            var link = Html.ActionLink("Eliminar", "Delete", new { codeUser = item.CodeUser });
            return link;
        })
        ))
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CodeUser)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CodeUser)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StateActive)
        </td>
        <td>
            @Html.ActionLink("Editar", "Update",   new { codeUser = item.CodeUser }) |
            @Html.ActionLink("Eliminar","Delete",  new { codeUser = item.CodeUser })
        </td>
    </tr>
}

</table>
